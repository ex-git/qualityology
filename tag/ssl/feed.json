{
    "version": "https://jsonfeed.org/version/1",
    "title": "Qualityology - Let's get the most out of life! â€¢ All posts by \"ssl\" tag",
    "description": "To uncover the best way to achieve desired level of quality in everything. - We dive deep on adding quality to tech gadgets, business, and entertainment because quality matter in life.",
    "home_page_url": "https://www.qualityology.com",
    "items": [
        {
            "id": "https://www.qualityology.com/tech/free-lets-encrypt-ssl-certificate-via-certbot/",
            "url": "https://www.qualityology.com/tech/free-lets-encrypt-ssl-certificate-via-certbot/",
            "title": "FREE Let's Encrypt SSL certificate via Certbot and auto renew",
            "date_published": "2017-01-29T07:43:55.000Z",
            "content_html": "<p>SSL certificate from Let&#x2019;s Encrypt is free. That is the the whole point of why people are getting Let&#x2019;s Encrypt&#x2019;s SSL certificate. Their SSl are supported in all modern browsers. The only con is the certificate expire in 3 months. However, we can make the renewing process easier with cron. This guide is for server that already have https setup correctly, and will NOT cover how to setup https or modify server ssl configuration file.</p>\n<h2 id=\"Step-1-get-Let&#x2019;s-Encrypt&#x2019;s-client-Certbot\"><a href=\"#Step-1-get-Let&#x2019;s-Encrypt&#x2019;s-client-Certbot\" class=\"headerlink\" title=\"Step 1, get Let&#x2019;s Encrypt&#x2019;s client: Certbot.\"></a>Step 1, get Let&#x2019;s Encrypt&#x2019;s client: Certbot.</h2><p>Most systems already have Certbot package in the repository. You can check and follow the installation step from <a href=\"https://certbot.eff.org/\">https://certbot.eff.org</a> *You can add more domain to above command if you like.</p>\n<h2 id=\"Step-2-use-CertBot-to-get-SSL-certificate-for-domain1-and-domain2\"><a href=\"#Step-2-use-CertBot-to-get-SSL-certificate-for-domain1-and-domain2\" class=\"headerlink\" title=\"Step 2, use CertBot to get SSL certificate for domain1 and domain2.\"></a>Step 2, use CertBot to get SSL certificate for domain1 and domain2.</h2><p>*We only need CertBot to generate certificate only in this case and we don&#x2019;t want CertBot to touch SSL configuration file.</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./certbot certonly --email xxx@xxx.com -d domain1.com -d www.domain1.com -d domain2.com -d www.domain2.com</span><br></pre></td></tr></table></figure>\n\n<p>Pick 1-3 for according to your server setup if you see below feedback.</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">How would you like to authenticate with the ACME CA?</span><br><span class=\"line\">-------------------------------------------------------------------------------</span><br><span class=\"line\">1: Apache Web Server plugin - Beta (apache)</span><br><span class=\"line\">2: Place files in webroot directory (webroot)</span><br><span class=\"line\">3: Spin up a temporary webserver (standalone)</span><br><span class=\"line\">-------------------------------------------------------------------------------</span><br><span class=\"line\">Select the appropriate number [1-3] then [enter] (press &apos;c&apos; to cancel): </span><br></pre></td></tr></table></figure>\n\n<p>CertBot will automatically verify your domain(s), generate key, and create CSR. Your will see Congratulation! note after all processes are completed. Total about 20 seconds.</p>\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IMPORTANT NOTES:</span><br><span class=\"line\"> - Congratulations! Your certificate and chain have been saved at</span><br><span class=\"line\">   /etc/letsencrypt/live/domain1.com/fullchain.pem. Your cert</span><br><span class=\"line\">   will expire on 2017-02-31. To obtain a new or tweaked version of</span><br><span class=\"line\">   this certificate in the future, simply run certbot-auto again. To</span><br><span class=\"line\">   non-interactively renew *all* of your certificates, run</span><br><span class=\"line\">   &quot;certbot-auto renew&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Step3-check-if-your-SSL-certificate-is-in-etc-letsencrypt-live-domain1-com-folder-You-should-have-below-files\"><a href=\"#Step3-check-if-your-SSL-certificate-is-in-etc-letsencrypt-live-domain1-com-folder-You-should-have-below-files\" class=\"headerlink\" title=\"Step3, check if your SSL certificate is in /etc/letsencrypt/live/domain1.com/ folder. You should have below files.\"></a>Step3, check if your SSL certificate is in /etc/letsencrypt/live/<strong>domain1</strong>.com/ folder. You should have below files.</h2><figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">privkey.pem  : the private key for your certificate.</span><br><span class=\"line\">fullchain.pem: the certificate file used in most server software.</span><br><span class=\"line\">chain.pem    : used for OCSP stapling in Nginx &gt;=1.3.7.</span><br><span class=\"line\">cert.pem     : will break many server configurations, and should not be used without reading further documentation.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Step-4-point-your-SSL-certificate-private-key-and-chain-to-the-new-generated-SSL-certificate-location-with-correct-names\"><a href=\"#Step-4-point-your-SSL-certificate-private-key-and-chain-to-the-new-generated-SSL-certificate-location-with-correct-names\" class=\"headerlink\" title=\"Step 4, point your SSL certificate, private key, and chain to the new generated SSL certificate location with correct names.\"></a>Step 4, point your SSL certificate, private key, and chain to the new generated SSL certificate location with correct names.</h2><p>(How to? please refer to this guide: <a href=\"http://nginx.org/en/docs/http/configuring_https_servers.html\">Configuring HTTPS servers</a>)</p>\n<h2 id=\"Step-5-create-a-auto-renewal-check-task-to-have-your-server-run-CertBot-to-check-the-certification-expiration-date-everyday-to-make-sure-your-SSL-is-not-expired\"><a href=\"#Step-5-create-a-auto-renewal-check-task-to-have-your-server-run-CertBot-to-check-the-certification-expiration-date-everyday-to-make-sure-your-SSL-is-not-expired\" class=\"headerlink\" title=\"Step 5, create a auto renewal check task to have your server run CertBot to check the certification expiration date everyday to make sure your SSL is not expired.\"></a>Step 5, create a auto renewal check task to have your server run CertBot to check the certification expiration date everyday to make sure your SSL is not expired.</h2><figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">certbot renew --noninteractive --renew-hook &apos;sudo systemctl reload nginx&apos;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "SSL"
            ]
        }
    ]
}